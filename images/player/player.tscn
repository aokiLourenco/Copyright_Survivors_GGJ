[gd_scene load_steps=13 format=3 uid="uid://ckghbxs42uq8j"]

[ext_resource type="Texture2D" uid="uid://c5yvquhc1j6wa" path="res://images/player/Protag.png" id="1_0nycx"]
[ext_resource type="PackedScene" uid="uid://xy3cvpwdy828" path="res://Utility/hurt_box.tscn" id="2_8c7tm"]
[ext_resource type="Texture2D" uid="uid://bvuc6160bikoc" path="res://images/player/GUI/exp_background.png" id="4_2g1dt"]
[ext_resource type="Texture2D" uid="uid://b0uacn55giwky" path="res://images/player/GUI/exp_progress.png" id="5_0xhp6"]
[ext_resource type="Texture2D" uid="uid://cnpw34cb3jgj5" path="res://images/player/GUI/healthbar.png" id="6_g8h3r"]
[ext_resource type="Texture2D" uid="uid://byydr0c7lqqyw" path="res://images/player/GUI/health.png" id="7_agack"]
[ext_resource type="PackedScene" uid="uid://b7c7gsdx2rkjm" path="res://Utility/basic_button.tscn" id="8_rlaau"]

[sub_resource type="GDScript" id="GDScript_k3dag"]
script/source = "extends CharacterBody2D

var movement_speed = 40.0
var hp = 80
var maxhp = 80
var last_movement = Vector2.UP
var time = 0

var experience = 0
var experience_level = 1
var collected_experience = 0

#Attacks
var swipe = preload(\"res://assets/images/player/Attack/swipe.tscn\")

#AttackNodes
@onready var SwipeTimer = get_node(\"%SwipeTimer\")
@onready var SwipeAttackTimer = get_node(\"%SwipeAttackTimer\")

#UPGRADES
var collected_upgrades = []
var upgrade_options = []
var armor = 0
var speed = 0
var spell_cooldown = 0
var spell_size = 0
var additional_attacks = 0

#Fox Tail
var swipe_ammo = 0
var swipe_baseammo = 0
var swipe_attackspeed = 2.0
var swipe_level = 0

#Enemy Related
var enemy_close = []

@onready var sprite = $Sprite2D
@onready var walkTimer = get_node(\"%walkTimer\")

#GUI
@onready var expBar = get_node(\"%ExperienceBar\")
@onready var lblLevel = get_node(\"%lbl_level\")
@onready var levelPanel = get_node(\"%LevelUp\")
@onready var upgradeOptions = get_node(\"%UpgradeOptions\")
@onready var itemOptions = preload(\"res://src/utility/item_option.tscn\")
@onready var sndLevelUp = get_node(\"%snd_levelup\")
@onready var healthBar = get_node(\"%HealthBar\")
@onready var lblTimer = get_node(\"%lblTimer\")
@onready var collectedWeapons = get_node(\"%CollectedWeapons\")
@onready var collectedUpgrades = get_node(\"%CollectedUpgrades\")
@onready var itemContainer = preload(\"res://assets/images/Player/GUI/item_container.tscn\")

@onready var deathPanel = get_node(\"%DeathPanel\")
@onready var lblResult = get_node(\"%lbl_Result\")
@onready var sndVictory = get_node(\"%snd_victory\")
@onready var sndLose = get_node(\"%snd_lose\")

#Signal
signal playerdeath

func _ready():
	upgrade_character(\"swipe1\")
	attack()
	set_expbar(experience, calculate_experiencecap())
	_on_hurt_box_hurt(0,0,0)

func _physics_process(delta):
	movement()
	
func movement():
	var x_mov = Input.get_action_strength(\"right\") - Input.get_action_strength(\"left\")
	var y_mov = Input.get_action_strength(\"down\") - Input.get_action_strength(\"up\")
	var mov = Vector2(x_mov,y_mov)
	if mov != Vector2.ZERO:
		last_movement = mov
		if walkTimer.is_stopped():
			if sprite.frame >= sprite.hframes - 1:
				sprite.frame = 0
			else:
				sprite.frame += 1
			walkTimer.start()
	
	velocity = mov.normalized()*movement_speed
	move_and_slide()
	
func attack():
	if swipe_level > 0:
		SwipeTimer.wait_time = swipe_attackspeed * (1-spell_cooldown)
		if SwipeTimer.is_stopped():
			SwipeTimer.start()
	

func _on_hurt_box_hurt(damage, _angle, _knockback):
	hp -= clamp(damage-armor, 1.0, 999.0)
	healthBar.max_value = maxhp
	healthBar.value = hp
	if hp <= 0:
		death()

func _on_swipe_timer_timeout():
	swipe_ammo += swipe_baseammo + additional_attacks
	SwipeAttackTimer.start()
	
func _on_swipe_attack_timer_timeout():
	if swipe_ammo > 0:
		var swipe_attack = swipe.instantiate()
		swipe_attack.position = position
		swipe_attack.target = get_random_target()
		swipe_attack.level = swipe_level
		add_child(swipe_attack)
		swipe -= 1
		if swipe_ammo > 0:
			SwipeAttackTimer.start()
		else:
			SwipeAttackTimer.stop()
			
func get_random_target():
	if enemy_close.size() > 0:
		return enemy_close.pick_random().global_position
	else:
		return Vector2.UP

func _on_enemy_detection_area_body_entered(body):
	if not enemy_close.has(body):
		enemy_close.append(body)

func _on_enemy_detection_area_body_exited(body):
	if enemy_close.has(body):
		enemy_close.erase(body)


func _on_grab_area_area_entered(area):
	if area.is_in_group(\"loot\"):
		area.target = self

func _on_collect_area_area_entered(area):
	if area.is_in_group(\"loot\"):
		var gem_exp = area.collect()
		calculate_experience(gem_exp)

func calculate_experience(gem_exp):
	var exp_required = calculate_experiencecap()
	collected_experience += gem_exp
	if experience + collected_experience >= exp_required: #level up
		collected_experience -= exp_required-experience
		experience_level += 1
		experience = 0
		exp_required = calculate_experiencecap()
		levelup()
	else:
		experience += collected_experience
		collected_experience = 0
	
	set_expbar(experience, exp_required)

func calculate_experiencecap():
	var exp_cap = experience_level
	if experience_level < 20:
		exp_cap = experience_level*5
	elif experience_level < 40:
		exp_cap + 95 * (experience_level-19)*8
	else:
		exp_cap = 255 + (experience_level-39)*12
	return exp_cap
		
func set_expbar(set_value = 1, set_max_value = 100):
	expBar.value = set_value
	expBar.max_value = set_max_value

func levelup():
	sndLevelUp.play()
	lblLevel.text = str(\"Level: \",experience_level)
	var tween = levelPanel.create_tween()
	tween.tween_property(levelPanel,\"position\",Vector2(220,50),0.2).set_trans(Tween.TRANS_QUINT).set_ease(Tween.EASE_IN)
	tween.play()
	levelPanel.visible = true
	var options = 0
	var optionsmax = 3
	while options < optionsmax:
		var option_choice = itemOptions.instantiate()
		option_choice.item = get_random_item()
		upgradeOptions.add_child(option_choice)
		options += 1
	get_tree().paused = true

func upgrade_character(upgrade):
	match upgrade:
		\"swipe1\":
			swipe_level = 1
			swipe_baseammo += 1
		\"swipe2\":
			swipe_level = 2
			swipe_baseammo += 1
		\"swipe3\":
			swipe_level = 3
			swipe_baseammo += 1
		\"swipe4\":
			swipe_level = 4
			swipe_baseammo += 1
		\"swipe5\":
			swipe_level = 5
			swipe_baseammo += 1
		\"armor1\",\"armor2\",\"armor3\",\"armor4\":
			armor += 1
		\"speed1\",\"speed2\",\"speed3\",\"speed4\":
			movement_speed += 20.0
		\"food\":
			hp += 20
			hp = clamp(hp,0,maxhp)
	adjust_gui_collection(upgrade)
	attack()
	var option_children = upgradeOptions.get_children()
	for i in option_children:
		i.queue_free()
	upgrade_options.clear()
	collected_upgrades.append(upgrade)
	levelPanel.visible = false
	levelPanel.position = Vector2(800,50)
	get_tree().paused = false
	calculate_experience(0)

func get_random_item():
	var dblist = []
	for i in UpgradeDb.UPGRADES:
		if i in collected_upgrades: #Find already collected upgrades
			pass
		elif i in upgrade_options: #If the upgrade is already an option
			pass
		elif UpgradeDb.UPGRADES[i][\"type\"] == \"item\": #Don't pick food
			pass
		elif UpgradeDb.UPGRADES[i][\"prerequisite\"].size() > 0: #Check for PreRequisites
			var to_add = true
			for n in UpgradeDb.UPGRADES[i][\"prerequisite\"]:
				if not n in collected_upgrades:
					to_add = false
			if to_add:
				dblist.append(i)
		else:
			dblist.append(i)
	if dblist.size() > 0:
		var randomitem = dblist.pick_random()
		upgrade_options.append(randomitem)
		return randomitem
	else:
		return null

func change_time(argtime = 0):
	time = argtime
	var get_m = int(time/60.0)
	var get_s = time % 60
	if get_m < 10:
		get_m = str(0,get_m)
	if get_s < 10:
		get_s = str(0,get_s)
	lblTimer.text = str(get_m,\":\",get_s)

func adjust_gui_collection(upgrade):
	var get_upgraded_displayname = UpgradeDb.UPGRADES[upgrade][\"displayname\"]
	var get_type = UpgradeDb.UPGRADES[upgrade][\"type\"]
	if get_type != \"item\":
		var get_collected_displaynames = []
		for i in collected_upgrades:
			get_collected_displaynames.append(UpgradeDb.UPGRADES[i][\"displayname\"])
		if not get_upgraded_displayname in get_collected_displaynames:
			var new_item = itemContainer.instantiate()
			new_item.upgrade = upgrade
			match get_type:
				\"weapon\":
					collectedWeapons.add_child(new_item)
				\"upgrade\":
					collectedUpgrades.add_child(new_item)

func death():
	deathPanel.visible = true
	emit_signal(\"playerdeath\")
	get_tree().paused = true
	var tween = deathPanel.create_tween()
	tween.tween_property(deathPanel,\"position\",Vector2(220,50),3.0).set_trans(Tween.TRANS_QUINT).set_ease(Tween.EASE_OUT)
	tween.play()
	if time >= 300:
		lblResult.text = \"You Win\"
		sndVictory.play()
	else:
		lblResult.text = \"You Lose\"
		sndLose.play()

func _on_btn_menu_click_end():
	get_tree().paused = false
	var _level = get_tree().change_scene_to_file(\"res://Source/TitleScreen/menu.tscn\")
"

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_l1tco"]

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_xpqvk"]
radius = 20.5
height = 51.0

[sub_resource type="CircleShape2D" id="CircleShape2D_aecl5"]
radius = 369.489

[sub_resource type="CircleShape2D" id="CircleShape2D_mua2y"]
radius = 81.0062

[node name="CharacterBody2D" type="CharacterBody2D" groups=["player"]]
script = SubResource("GDScript_k3dag")

[node name="Sprite2D" type="Sprite2D" parent="."]
texture = ExtResource("1_0nycx")
hframes = 4

[node name="Camera2D" type="Camera2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource("CapsuleShape2D_l1tco")

[node name="walkTimer" type="Timer" parent="."]
wait_time = 0.2
one_shot = true

[node name="HurtBox" parent="." instance=ExtResource("2_8c7tm")]

[node name="CollisionShape2D" parent="HurtBox" index="0"]
position = Vector2(0.5, -1.5)
shape = SubResource("CapsuleShape2D_xpqvk")

[node name="Attack" type="Node2D" parent="."]

[node name="EnemyDetectionArea" type="Area2D" parent="."]
visible = false
collision_layer = 4
collision_mask = 4
monitorable = false

[node name="CollisionShape2D" type="CollisionShape2D" parent="EnemyDetectionArea"]
shape = SubResource("CircleShape2D_aecl5")

[node name="GrabArea" type="Area2D" parent="."]
visible = false
collision_layer = 0
collision_mask = 8

[node name="CollisionShape2D" type="CollisionShape2D" parent="GrabArea"]
shape = SubResource("CircleShape2D_mua2y")

[node name="GUILayer" type="CanvasLayer" parent="."]

[node name="GUI" type="Control" parent="GUILayer"]
layout_mode = 3
anchors_preset = 0
offset_right = 640.0
offset_bottom = 360.0

[node name="ExperienceBar" type="TextureProgressBar" parent="GUILayer/GUI"]
layout_mode = 0
offset_right = 40.0
offset_bottom = 40.0
texture_under = ExtResource("4_2g1dt")
texture_progress = ExtResource("5_0xhp6")

[node name="lbl_level" type="Label" parent="GUILayer/GUI/ExperienceBar"]
layout_mode = 0
offset_right = 40.0
offset_bottom = 23.0

[node name="HealthBar" type="TextureProgressBar" parent="GUILayer/GUI"]
self_modulate = Color(1, 1, 1, 0.392157)
layout_mode = 0
offset_left = 304.0
offset_top = 200.0
offset_right = 336.0
offset_bottom = 208.0
texture_over = ExtResource("6_g8h3r")
texture_progress = ExtResource("7_agack")

[node name="LevelUp" type="Panel" parent="GUILayer/GUI"]
visible = false
layout_mode = 0
offset_left = 800.0
offset_top = 50.0
offset_right = 1000.0
offset_bottom = 300.0

[node name="lbl_LevelUp" type="Label" parent="GUILayer/GUI/LevelUp"]
layout_mode = 0
offset_right = 200.0
offset_bottom = 50.0
text = "Level Up !"
horizontal_alignment = 1
vertical_alignment = 1

[node name="UpgradeOptions" type="VBoxContainer" parent="GUILayer/GUI/LevelUp"]
layout_mode = 0
offset_left = 10.0
offset_top = 50.0
offset_right = 190.0
offset_bottom = 100.0

[node name="DeathPanel" type="Panel" parent="GUILayer/GUI"]
visible = false
layout_mode = 0
offset_left = 230.0
offset_top = -266.0
offset_right = 430.0
offset_bottom = -16.0

[node name="lbl_Result" type="Label" parent="GUILayer/GUI/DeathPanel"]
layout_mode = 0
offset_right = 40.0
offset_bottom = 23.0

[node name="btn_menu" parent="GUILayer/GUI/DeathPanel" instance=ExtResource("8_rlaau")]
layout_mode = 0
offset_right = 80.0
offset_bottom = 31.0
text = "Menu"

[connection signal="body_entered" from="EnemyDetectionArea" to="." method="_on_enemy_detection_area_body_entered"]
[connection signal="body_exited" from="EnemyDetectionArea" to="." method="_on_enemy_detection_area_body_exited"]
[connection signal="area_entered" from="GrabArea" to="." method="_on_grab_area_area_entered"]
[connection signal="click_end" from="GUILayer/GUI/DeathPanel/btn_menu" to="." method="_on_btn_menu_click_end"]

[editable path="HurtBox"]
